# If you are looking for guidance for your builds, see https://github.com/microsoft/github-actions-for-desktop-apps
name: Main

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    env:
      CERTIFICATE_FILENAME: LancelotSoftwareLLC.pfx
      TELERIK_USERNAME: ${{ secrets.TELERIK_USERNAME }}
      TELERIK_PASSWORD: ${{ secrets.TELERIK_PASSWORD }}

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: Downloand and install msbuild 16.8
      run: | 
        mkdir c:\bldtlinstall
        $client = new-object System.Net.WebClient 
        $client.DownloadFile("https://download.visualstudio.microsoft.com/download/pr/5f914955-f6c7-4add-8e47-2e090bdc02fa/bc60b587587d10eacc50fe99a6f3d57a81749cb55c904225892d1d165f01a913/vs_BuildTools.exe","c:\bldtlinstall\vs_BuildTools.exe")
        # self note https://docs.microsoft.com/en-us/visualstudio/install/use-command-line-parameters-to-install-visual-studio?view=vs-2019
        Start-Process -Wait "c:\bldtlinstall\vs_BuildTools.exe" "--add Microsoft.VisualStudio.Workload.MSBuildTools --add Microsoft.VisualStudio.Workload.UniversalBuildTools --add Microsoft.VisualStudio.Workload.ManagedDesktopBuildTools --add Microsoft.VisualStudio.Component.Windows10SDK.19041 --quiet"

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1.7.2
      with:
        dotnet-version: '5.0.x'

    # Add  MsBuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2
      with:
        vs-version: '[16.8,16.9)'

    # Create my own version number with a specific format using date. ex: 2020.805.1.0
    - uses: Amadevus/pwsh-script@v1
      id: version-creator
      with:
        script: |
          $buildDay = Get-Date -Format "yyyy.Mdd"
          $ver = $buildDay + "." + $env:GITHUB_RUN_NUMBER + ".0"
          Set-ActionVariable UWP_VERSION $ver

    # Update the UWP package version
    - name: Update manifest version
      run: |
        [xml]$manifest = get-content "src\MediaFileManager\PackageProject\Package.appxmanifest"
        $manifest.Package.Identity.Version = "$env:UWP_VERSION"
        $manifest.save("src\MediaFileManager\PackageProject\Package.appxmanifest")

    - name: NuGet Restore
      run: dotnet restore src\MediaFileManager\MediaFileManager.sln --configfile src\nuget.config --runtime $env:RID
      env:
        # https://docs.microsoft.com/en-us/dotnet/core/rid-catalog
        RID: win-x86

    # Restore WPF project
    - name: Restore the Wpf application to populate the obj folder
      run: msbuild src\MediaFileManager\MediaFileManager.Desktop\MediaFileManager.Desktop.csproj /t:Restore /p:Configuration=Debug /p:RuntimeIdentifier=$env:RID
      env:
        # https://docs.microsoft.com/en-us/dotnet/core/rid-catalog
        RID: win-x86

    # Build the WAP project
    - name: Build the Windows Application Packaging Project (wapproj) 
      run: msbuild src\MediaFileManager\MediaFileManager.sln /p:Platform=$env:TargetPlatform /p:Configuration=$env:Configuration /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:AppxPackageSigningEnabled=$env:AppxPackageSigningEnabled 
      env:
        AppxBundle: Never
        AppxPackageSigningEnabled: False
        BuildMode: CI
        Configuration: Debug
        TargetPlatform: x86
