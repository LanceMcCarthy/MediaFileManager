name: Release (Microsoft Store)

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    env:
      NugetConfigPath: src\nuget.config
      WappProjectPath: src\MediaFileManager\PackageProject\PackageProject.wapproj
      WpfProjectPath: src\MediaFileManager\MediaFileManager.Desktop\MediaFileManager.Desktop.csproj
      SolutionPath: src\MediaFileManager\MediaFileManager.sln
      Configuration: Release
      AppxBundlePlatforms: "x64|arm64"
      TFM: net8.0-windows10.0.19041.0
      DOTNET_VERSION: "9.0.x"
      AppxBundleMode: Always
      AppxBuildMode: StoreUpload
      AppxPackageSigningEnabled: False
      GenerateAppInstallerFile: False
      HoursBetweenUpdateChecks: 6
      AppxPackageDirectory: D:\a\MediaFileManager\MediaFileManager\src\MediaFileManager\PackageProject\StoreUploadPackages\
      ArtifactsFilePath: D:\a\MediaFileManager\MediaFileManager\src\MediaFileManager\PackageProject\StoreUploadPackages\ReleasePackages.zip
      AppInstUri: https://dvlup.blob.core.windows.net/general-app-files/Installers/MediaFileManager/
      TELERIK_NUGET_KEY: ${{secrets.TELERIK_NUGET_KEY}}
      TELERIK_LICENSE: ${{secrets.TELERIK_LICENSE_KEY}}
      msstore-seller-id: "10113620"
      msstore-product-id: "9PD3JFK7W5MB"
      msstore-tenant-id: "237e90e1-29b9-4350-913d-f3837799f3c0"
      msstore-client-id: "99d69d81-6234-46be-acf5-e7b59e7887af"
      msstore-subscription-id: "48ab4839-62af-4ab3-afe6-043ea4d7c137"

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Azure Login
      uses: azure/login@v2
      with:
        creds: '{"clientId":"${{env.msstore-client-id}}","clientSecret":"${{secrets.PARTNER_CENTER_CLIENT_SECRET}}","subscriptionId":"${{env.msstore-subscription-id}}","tenantId":"${{env.msstore-tenant-id}}"}'
        enable-AzPSSession: true

    - name: Generate version number with date and workflow Run Number
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $runNumber = "$env:GITHUB_RUN_NUMBER"
        $ver = $buildDay + "." + $runNumber + ".0"
        echo "APP_VERSION=$ver" >> $env:GITHUB_OUTPUT

    - name: Update manifest version
      run: |
        [xml]$manifest = get-content "src\MediaFileManager\PackageProject\Package.appxmanifest"
        $manifest.Package.Identity.Version = "${{steps.version-creator.outputs.APP_VERSION}}"
        $manifest.Package.Identity.Name = "${{env.PackageIdentity_Name}}"
        $manifest.Package.Identity.Publisher = "${{env.PackageIdentity_Publisher}}"
        $manifest.Package.Properties.DisplayName = "${{env.PackageProperties_DisplayName}}"
        $manifest.Package.Properties.PublisherDisplayName = "${{env.PackageProperties_PublisherDisplayName}}"
        $manifest.Package.Applications.Application.VisualElements.DisplayName = "${{env.ApplicationVisualElements_DisplayName}}"
        $manifest.save("src\MediaFileManager\PackageProject\Package.appxmanifest")
      env:
        PackageIdentity_Name: "61469LanceLotSoftware.MediaFileManager"
        PackageIdentity_Publisher: "CN=51B5A8B2-5D86-4826-BBE2-C92E963A4C02"
        PackageProperties_DisplayName: "Media File Manager"
        PackageProperties_PublisherDisplayName: "Lancelot Software"
        ApplicationVisualElements_DisplayName: "Media File Manager"

    # Updates the WPF project's assembly version number.
    - name: Update WPF Assembly version
      run: |
        function SetAssemblyFileVersion([string]$pathToFile, [string]$newVersion) {
          $newFile = Get-Content $pathToFile -encoding "UTF8" | foreach-object {
            if ($_.StartsWith("[assembly: AssemblyFileVersion")) {
              $verStart = $_.IndexOf("(")
              $verEnd = $_.IndexOf(")", $verStart)
              $origVersion = $_.SubString($verStart+2, $verEnd-$verStart-3)
              $newVersion = "${{steps.version-creator.outputs.APP_VERSION}}"
              write-host "Setting AssemblyFileVersion from $origVersion to $newVersion"
              $_.Replace($origVersion, $newVersion)
            }  else {
              $_
            } 
          }
          $newfile | Set-Content $assemblyInfoPath -encoding "UTF8"
        }
        $assemblyInfoPath = "src\MediaFileManager\MediaFileManager.Desktop\Properties\AssemblyInfo.cs"
        SetAssemblyFileVersion $assemblyInfoPath "${{steps.version-creator.outputs.APP_VERSION}}"

    - name: Install .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{env.DOTNET_VERSION}}

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3.2

    - name: Restore wpf project
      run: msbuild ${{env.WpfProjectPath}} /t:Restore /p:Configuration=${{env.Configuration}}

    - name: DotNet Restore
      run: dotnet restore ${{env.WappProjectPath}} --configfile ${{env.NugetConfigPath}} --runtime ${{env.TFM}}


    # Building for store upload - no code signing with pfx
    - name: Build msixupload for Microsoft Store
      run: msbuild "${{env.SolutionPath}}" /p:AppxPackageDir="${{env.AppxPackageDirectory}}" /p:AppxBundlePlatforms="${{env.AppxBundlePlatforms}}" /p:Configuration=${{env.Configuration}} /p:UapAppxPackageBuildMode=${{env.AppxBuildMode}} /p:AppxBundle=${{env.AppxBundleMode}}  /p:AppxPackageSigningEnabled=${{env.AppxPackageSigningEnabled}} /p:GenerateAppInstallerFile=${{env.GenerateAppInstallerFile}}
      env:
        CertPrivateKey: ${{secrets.LancelotSoftwareCert_Key}}
        CertThumbprint: ${{secrets.LancelotSoftwareCert_Thumbprint}}

    - name: Generate Paths For Upload
      id: generate-paths
      shell: bash
      run: |
        platforms="${{env.AppxBundlePlatforms}}"
        version="${{steps.version-creator.outputs.APP_VERSION}}"
        platformsWithUnderscore="${platforms//|/_}"
        fileName="PackageProject_${version}_${platformsWithUnderscore}_bundle.msix"
        uploadBundlePath="${{env.AppxPackageDirectory}}${fileName}"
        echo "BUNDLE_FILENAME=$fileName" >> $env:GITHUB_OUTPUT
        echo "BUNDLE_PATH=$uploadBundlePath" >> $env:GITHUB_OUTPUT


    # ************************| Microsoft Store Submission |************************ #

    # Not a typical Entra app, see https://github.com/marketplace/actions/microsoft-store-publish#obtaining-your-credentials 
    # - name: Configure Partner Center Credentials
    #   uses: microsoft/store-submission@v1
    #   with:
    #     command: configure
    #     type: win32
    #     seller-id: ${{env.msstore-seller-id}}
    #     product-id: ${{env.msstore-product-id}}
    #     tenant-id: ${{env.msstore-tenant-id}}
    #     client-id: ${{env.msstore-client-id}}
    #     client-secret: ${{secrets.PARTNER_CENTER_CLIENT_SECRET}}

    # - name: Draft Submission
    #   uses: microsoft/store-submission@v1
    #   with:
    #     command: update
    #     product-update: '{"packages":[{"packageUrl":"${{steps.generate-paths.outputs.BUNDLE_PATH}}","languages":["en"],"architectures":["X64", "ARM64"],"isSilentInstall":true}]}'

    # - name: Publish Submission
    #   uses: microsoft/store-submission@v1
    #   with:
    #     command: publish


    - uses: microsoft/setup-msstore-cli@v1

    - name: Configure Store Credentials
      run: msstore reconfigure -c ${{env.msstore-client-id}} -t ${{env.msstore-tenant-id}} -s ${{env.msstore-seller-id}} --clientSecret ${{secrets.PARTNER_CENTER_CLIENT_SECRET}}
      
    # just to confirm auth is correct
    - run: msstore apps list

    - name: Update draft submission
      run: msstore submission update ${{env.msstore-product-id}} '{"packages":[{"packageUrl":"${{steps.generate-paths.outputs.BUNDLE_PATH}}","languages":["en"],"architectures":["X64", "ARM64"],"isSilentInstall":true}]}

    - name: Publish Submission
      run: msstore submission publish ${{env.msstore-product-id}}

    # ************************| GitHub Release |************************ #
    
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        tag_name: "v.${{steps.version-creator.outputs.APP_VERSION}}"
        release_name: "Media File Manager v.${{steps.version-creator.outputs.APP_VERSION}}"
        draft: false
        prerelease: false
        body_path: .github\other\releasebody.md

    - name: Uploading Release asset
      id: upload-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      with:
        upload_url: ${{steps.create_release.outputs.upload_url}}
        asset_path: ${{steps.generate-paths.outputs.BUNDLE_PATH}}
        asset_name: ${{steps.generate-paths.outputs.BUNDLE_FILENAME}}
        asset_content_type: application/zip
