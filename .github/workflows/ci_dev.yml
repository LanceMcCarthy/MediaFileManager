# If you are looking for guidance for your builds, see https://github.com/microsoft/github-actions-for-desktop-apps
name: Development

on:
  push:
    branches:
      - main-dev
    paths:
      - "src/**/*"
      - ".github/workflows/ci_dev.yml"

jobs:
  build:
    runs-on: windows-2022
    env:
      TFM: net6.0-windows10.0.18362.0
      RID: win-x64
      ProjectPath: src\MediaFileManager\MediaFileManager.Desktop\MediaFileManager.Desktop.csproj
      SolutionPath: src\MediaFileManager\MediaFileManager.sln
      WappProject_Path: src\MediaFileManager\PackageProject\PackageProject.wapproj
      NugetConfigPath: src\nuget.config
      Configuration: Debug
    
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    # Install the .NET 6 workload
    - name: Install .NET 6
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '6.0'

    # Add msbuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.1

    # Use dotnet restore command for the solution (see RIDs https://docs.microsoft.com/en-us/dotnet/core/rid-catalog)
    - name: DotNet Restore
      run: dotnet restore $env:SolutionPath --configfile $env:NugetConfigPath --runtime $env:RID
      env:
        TELERIK_USERNAME: ${{ secrets.TELERIK_USERNAME }}
        TELERIK_PASSWORD: ${{ secrets.TELERIK_PASSWORD }}

    # In order to generate project.assets.json, we need to use nuget.exe for the wapproject
    - name: NuGet Restore Wapp Project (to ensure assets.json is available)
      run: nuget restore $env:WappProject_Path -ConfigFile $env:NugetConfigPath
      env:
        TELERIK_USERNAME: ${{ secrets.TELERIK_USERNAME }}
        TELERIK_PASSWORD: ${{ secrets.TELERIK_PASSWORD }}

    # Restore WPF project to populate the obj folder (see RIDs https://docs.microsoft.com/en-us/dotnet/core/rid-catalog)
    - name: Build the Wpf application to populate the obj folder
      run: msbuild $env:WpfProjectPath /t:Restore /p:Configuration=$env:Configuration /p:RuntimeIdentifier=$env:RID
      env:
        TELERIK_USERNAME: ${{ secrets.TELERIK_USERNAME }}
        TELERIK_PASSWORD: ${{ secrets.TELERIK_PASSWORD }}

    # Build the WAP project. BuildMode is set to CI so we do not have to generate actual packages.
    - name: Build the Windows Application Packaging Project (wapproj) 
      run: msbuild $env:WappProject_Path /p:Configuration=$env:Configuration /p:Platform=$env:TargetPlatform /p:UapAppxPackageBuildMode=$env:BuildMode /p:AppxBundle=$env:AppxBundle /p:AppxPackageSigningEnabled=$env:AppxPackageSigningEnabled 
      env:
        TELERIK_USERNAME: ${{ secrets.TELERIK_USERNAME }}
        TELERIK_PASSWORD: ${{ secrets.TELERIK_PASSWORD }}
        TargetPlatform: x64
        BuildMode: CI
        AppxBundle: Never
        AppxPackageSigningEnabled: False
