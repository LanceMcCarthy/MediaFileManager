# If you are looking for guidance for your builds, see https://github.com/microsoft/github-actions-for-desktop-apps
name: Development

on:
  workflow_dispatch:
  push:
    branches:
      - main-dev
    paths:
      - "src/**/*"
      - ".github/workflows/ci_dev.yml"

jobs:
  build_dev:
    runs-on: windows-latest
    env:
      TFM: net7.0-windows10.0.19041.0
      WpfProjectPath: src\MediaFileManager\MediaFileManager.Desktop\MediaFileManager.Desktop.csproj
      WappProjectPath: src\MediaFileManager\PackageProject\PackageProject.wapproj
      SolutionPath: src\MediaFileManager\MediaFileManager.sln
      UwpProjectPath: src\MediaFileManager\PackageProject\PackageProject.wapproj
      AppxBundlePlatforms: "x86|x64|arm64"
      TargetPlatform: "x64"
      AppxBundleMode: Never
      AppxBuildMode: CI
      NugetConfigPath: src\nuget.config
      Configuration: Debug
      AppxPackageSigningEnabled: False
      GenerateAppInstallerFile: False
      TELERIK_NUGET_KEY: ${{ secrets.TELERIK_NUGET_KEY }}
    
    steps:
    - name: Generate version number with date and workflow Run Number
      id: version-creator
      run: |
        $buildDay = Get-Date -Format "yyyy.Mdd"
        $runNumber = "$env:GITHUB_RUN_NUMBER"
        $ver = $buildDay + "." + $runNumber + ".0"
        $keypair = "APP_VERSION=$ver"
        echo "$keypair"
        echo $keypair >> "$GITHUB_OUTPUT"
        echo $keypair >> "$GITHUB_ENV"

    - name: verify outputs and vars
      run: |
        echo "${{ steps.version-creator.outputs.APP_VERSION }}"
        echo "${{ env.APP_VERSION }}"


    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    # Install the .NET SDK workload
    - name: Install .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0'

    # Add msbuild to the PATH: https://github.com/microsoft/setup-msbuild
    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.3.1

    # Use dotnet restore command for the solution (see RIDs https://docs.microsoft.com/en-us/dotnet/core/rid-catalog)
    - name: DotNet Restore
      run: dotnet restore ${{ env.WappProjectPath }} --configfile ${{ env.NugetConfigPath }} --runtime ${{ env.TFM }}

    # We're not building the MSIX package, no need for wasting time and CPU cycles for quick dev build
    - name: Build the Windows Application Packaging Project (wapproj) 
      run: msbuild ${{ env.WappProjectPath }} /t:Restore /p:Configuration=${{ env.Configuration }} /p:Platform=${{ env.TargetPlatform }} /p:UapAppxPackageBuildMode=${{ env.AppxBuildMode }} /p:AppxBundle=${{ env.AppxBundleMode }} /p:AppxPackageSigningEnabled=${{ env.AppxPackageSigningEnabled }} /p:GenerateAppInstallerFile=${{ env.GenerateAppInstallerFile }} /p:AppxBundlePlatforms="${{ env.AppxBundlePlatforms }}"